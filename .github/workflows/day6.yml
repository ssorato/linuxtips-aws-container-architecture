name: CI/CD Pipeline - day6

on:
  push:
    branches:
      - master
    path:
      - terraform/day6/app/**

env:
  REPOSITORY_PATH: "linuxtips"
  APP_NAME: "linuxtips-app"
  CLUSTER_NAME: "ecs-linuxtips"
  TF_ENV_NAME: "dev"
  AWS_REGION: "us-east-1"


jobs:
  app-ci:
    name: Application CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Golang
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Install GoLint
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.59.1

      - name: Lint App
        run: |
          golangci-lint run ./... -E errcheck
        working-directory: ./terraform/day6/app

      - name: Test App
        run: go test ./...
        working-directory: ./terraform/day6/app

  infra-ci:
    runs-on: ubuntu-latest
    name: Infrastructure CI
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.7.0"

      - name: Build backend.tfvars
        run: |
          cat <<EOT > environment/${{ env.TF_ENV_NAME }}/backend.tfvars
          bucket         = "${{ secrets.S3_BUCKET_NAME}}"
          key            = "${{ secrets.S3_KEY_ROOT_PATH}}/day6.tfstate"
          dynamodb_table = "${{ secrets.DYNAMODB_TABLE_NAME }}"
          region         = "${{ env.AWS_REGION }}"
          EOT
        working-directory: ./terraform/day6/terraform

      - name: Terraform fmt check
        run: |
          terraform fmt --recursive --check
        working-directory: ./terraform/day6/terraform

      - name: Terraform init
        run: |
          terraform init -backend-config=environment/${{ env.TF_ENV_NAME }}/backend.tfvars
        working-directory: ./terraform/day6/terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION:  ${{ env.AWS_REGION }}

      - name: Terraform Validate
        run: |
          terraform validate
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION:  ${{ env.AWS_REGION }}

